2024-09-13 10:26:25,235:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 10:26:25,235:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 10:26:25,235:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 10:26:25,235:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 10:29:22,607:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 10:29:22,607:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 10:29:22,607:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 10:29:22,607:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 10:35:13,556:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 10:35:13,556:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 10:35:13,556:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 10:35:13,556:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 10:42:20,020:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 10:42:20,020:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 10:42:20,020:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 10:42:20,020:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 10:44:38,904:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 10:44:38,904:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 10:44:38,904:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 10:44:38,904:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 10:46:27,304:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 10:46:27,304:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 10:46:27,304:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 10:46:27,304:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 10:48:20,237:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 10:48:20,237:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 10:48:20,237:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 10:48:20,237:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 11:05:58,524:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 11:05:58,524:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 11:05:58,524:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 11:05:58,524:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 11:07:18,382:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 11:07:18,382:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 11:07:18,382:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 11:07:18,382:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 11:48:18,431:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 11:48:18,447:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 11:48:18,447:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 11:48:18,447:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 11:50:51,520:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 11:50:51,520:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 11:50:51,520:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 11:50:51,520:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 11:58:01,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 11:58:01,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 11:58:01,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 11:58:01,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 11:58:06,467:INFO:Initializing predict_model()
2024-09-13 11:58:06,467:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024F62EAC1F0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024F61B8E320>)
2024-09-13 11:58:06,467:INFO:Checking exceptions
2024-09-13 11:58:06,467:INFO:Preloading libraries
2024-09-13 11:58:06,467:INFO:Set up data.
2024-09-13 11:58:06,480:INFO:Set up index.
2024-09-13 11:58:53,581:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 11:58:53,581:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 11:58:53,581:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 11:58:53,581:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-13 11:58:57,582:INFO:Initializing predict_model()
2024-09-13 11:58:57,582:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CA2FD3CDF0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002CA2FC80040>)
2024-09-13 11:58:57,582:INFO:Checking exceptions
2024-09-13 11:58:57,582:INFO:Preloading libraries
2024-09-13 11:58:57,582:INFO:Set up data.
2024-09-13 11:58:57,594:INFO:Set up index.
2024-09-15 09:17:06,224:INFO:Initializing predict_model()
2024-09-15 09:17:06,241:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CA2FD3C520>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002CA6B30E9E0>)
2024-09-15 09:17:06,242:INFO:Checking exceptions
2024-09-15 09:17:06,243:INFO:Preloading libraries
2024-09-15 09:17:06,262:INFO:Set up data.
2024-09-15 09:17:06,386:INFO:Set up index.
2024-09-15 09:18:09,295:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-15 09:18:09,295:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-15 09:18:09,295:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-15 09:18:09,295:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-15 09:19:11,774:INFO:Initializing predict_model()
2024-09-15 09:19:11,774:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FC293255D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FC2926BEB0>)
2024-09-15 09:19:11,774:INFO:Checking exceptions
2024-09-15 09:19:11,774:INFO:Preloading libraries
2024-09-15 09:19:11,774:INFO:Set up data.
2024-09-15 09:19:11,805:INFO:Set up index.
2024-09-15 09:19:32,472:INFO:Initializing predict_model()
2024-09-15 09:19:32,472:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FC293279D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FC2931C0D0>)
2024-09-15 09:19:32,472:INFO:Checking exceptions
2024-09-15 09:19:32,472:INFO:Preloading libraries
2024-09-15 09:19:32,472:INFO:Set up data.
2024-09-15 09:19:32,488:INFO:Set up index.
2024-09-15 09:19:43,844:INFO:Initializing predict_model()
2024-09-15 09:19:43,844:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FC29325780>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FC2931CEE0>)
2024-09-15 09:19:43,844:INFO:Checking exceptions
2024-09-15 09:19:43,844:INFO:Preloading libraries
2024-09-15 09:19:43,844:INFO:Set up data.
2024-09-15 09:19:43,854:INFO:Set up index.
2024-09-15 09:19:55,177:INFO:Initializing predict_model()
2024-09-15 09:19:55,177:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FC29325300>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FC2931CF70>)
2024-09-15 09:19:55,177:INFO:Checking exceptions
2024-09-15 09:19:55,177:INFO:Preloading libraries
2024-09-15 09:19:55,177:INFO:Set up data.
2024-09-15 09:19:55,193:INFO:Set up index.
2024-09-15 09:20:05,029:INFO:Initializing predict_model()
2024-09-15 09:20:05,029:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FC293259F0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FC2931CEE0>)
2024-09-15 09:20:05,029:INFO:Checking exceptions
2024-09-15 09:20:05,029:INFO:Preloading libraries
2024-09-15 09:20:05,029:INFO:Set up data.
2024-09-15 09:20:05,045:INFO:Set up index.
2024-09-15 09:20:06,978:INFO:Initializing predict_model()
2024-09-15 09:20:06,978:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FC293258D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FC2926BD00>)
2024-09-15 09:20:06,978:INFO:Checking exceptions
2024-09-15 09:20:06,978:INFO:Preloading libraries
2024-09-15 09:20:06,978:INFO:Set up data.
2024-09-15 09:20:06,999:INFO:Set up index.
